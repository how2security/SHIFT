#!/usr/bin/env python
# -*- coding: utf-8 -*-

'''
Author: Wellington Silva a.k.a. Well
Date: July 2017
Name: utf_16.py
Purpose: Class Encode/Decode with UFT-16.
Description: Script Based on script CAL9000 by Chris Loomis from OWASP Project, posted at:
                     <https://www.owasp.org/index.php/Category:OWASP_CAL9000_Project>
Version: 1.0B
Licence: GPLv3
 This program is free software: you can redistribute it and/or modify
 it under the terms of the GNU General Public License as published by
 the Free Software Foundation, either version 3 of the License, or
 (at your option) any later version.
 
 This program is distributed in the hope that it will be useful,
 but WITHOUT ANY WARRANTY; without even the implied warranty of
 MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 GNU General Public License for more details.
 
 You should have received a copy of the GNU General Public License
 along with this program.  If not, see <http://www.gnu.org/licenses/>.

Other itens: Copyright (c) 2017, How2Security All rights reserved.
'''

class CodingUTF16:
    def __init__(self, mystring):
        self.mystring = mystring
	# Encode UTF-16
        self.utf16 = { r'\xff\xfe\x00\x00' : '', r'\xff\xfe\x20\x00' : r' ', r'\xff\xfe\x21\x00' : r'!', r'\xff\xfe\x22\x00' : r'"', r'\xff\xfe\x23\x00' : r'#', r'\xff\xfe\x24\x00' : r'$', r'\xff\xfe\x25\x00' : r'%', r'\xff\xfe\x26\x00' : r'&', r'\xff\xfe\x27\x00' : r"'", r'\xff\xfe\x28\x00' : r'(', r'\xff\xfe\x29\x00' : r')', r'\xff\xfe\x2A\x00' : r'*', r'\xff\xfe\x2B\x00' : r'+', r'\xff\xfe\x2C\x00' : r',', r'\xff\xfe\x2D\x00' : r'-', r'\xff\xfe\x2E\x00' : r'.', r'\xff\xfe\x2F\x00' : r'/', r'\xff\xfe\x30\x00' : r'0', r'\xff\xfe\x31\x00' : r'1', r'\xff\xfe\x32\x00' : r'2', r'\xff\xfe\x33\x00' : r'3', r'\xff\xfe\x34\x00' : r'4', r'\xff\xfe\x35\x00' : r'5', r'\xff\xfe\x36\x00' : r'6', r'\xff\xfe\x37\x00' : r'7', r'\xff\xfe\x38\x00' : r'8', r'\xff\xfe\x39\x00' : r'9', r'\xff\xfe\x3A\x00' : r':', r'\xff\xfe\x3B\x00' : r';', r'\xff\xfe\x3C\x00' : r'<', r'\xff\xfe\x3D\x00' : r'=', r'\xff\xfe\x3E\x00' : r'>', r'\xff\xfe\x3F\x00' : r'?', r'\xff\xfe\x40\x00' : r'@', r'\xff\xfe\x41\x00' : r'A', r'\xff\xfe\x42\x00' : r'B', r'\xff\xfe\x43\x00' : r'C', r'\xff\xfe\x44\x00' : r'D', r'\xff\xfe\x45\x00' : r'E', r'\xff\xfe\x46\x00' : r'F', r'\xff\xfe\x47\x00' : r'G', r'\xff\xfe\x48\x00' : r'H', r'\xff\xfe\x49\x00' : r'I', r'\xff\xfe\x4A\x00' : r'J', r'\xff\xfe\x4B\x00' : r'K', r'\xff\xfe\x4C\x00' : r'L', r'\xff\xfe\x4D\x00' : r'M', r'\xff\xfe\x4E\x00' : r'N', r'\xff\xfe\x4F\x00' : r'O', r'\xff\xfe\x50\x00' : r'P', r'\xff\xfe\x51\x00' : r'Q', r'\xff\xfe\x52\x00' : r'R', r'\xff\xfe\x53\x00' : r'S', r'\xff\xfe\x54\x00' : r'T', r'\xff\xfe\x55\x00' : r'U', r'\xff\xfe\x56\x00' : r'V', r'\xff\xfe\x57\x00' : r'W', r'\xff\xfe\x58\x00' : r'X', r'\xff\xfe\x59\x00' : r'Y', r'\xff\xfe\x5A\x00' : r'Z', r'\xff\xfe\x5B\x00' : r'[', r'\xff\xfe\x5C\x00' : r'\\', r'\xff\xfe\x5D\x00' : r'[', r'\xff\xfe\x5E\x00' : r'^', r'\xff\xfe\x5F\x00' : r'_', r'\xff\xfe\x60\x00' : r'`', r'\xff\xfe\x61\x00' : r'a', r'\xff\xfe\x62\x00' : r'b', r'\xff\xfe\x63\x00' : r'c', r'\xff\xfe\x64\x00' : r'd', r'\xff\xfe\x65\x00' : r'e', r'\xff\xfe\x66\x00' : r'f', r'\xff\xfe\x67\x00' : r'g', r'\xff\xfe\x68\x00' : r'h', r'\xff\xfe\x69\x00' : r'i', r'\xff\xfe\x6A\x00' : r'j', r'\xff\xfe\x6B\x00' : r'k', r'\xff\xfe\x6C\x00' : r'l', r'\xff\xfe\x6D\x00' : r'm', r'\xff\xfe\x6E\x00' : r'n', r'\xff\xfe\x6F\x00' : r'o', r'\xff\xfe\x70\x00' : r'p', r'\xff\xfe\x71\x00' : r'q', r'\xff\xfe\x72\x00' : r'r', r'\xff\xfe\x73\x00' : r's', r'\xff\xfe\x74\x00' : r't', r'\xff\xfe\x75\x00' : r'u', r'\xff\xfe\x76\x00' : r'v', r'\xff\xfe\x77\x00' : r'w', r'\xff\xfe\x78\x00' : r'x', r'\xff\xfe\x79\x00' : r'y', r'\xff\xfe\x7A\x00' : r'z', r'\xff\xfe\x7B\x00' : r'{', r'\xff\xfe\x7C\x00' : r'|', r'\xff\xfe\x7D\x00' : r'}', r'\xff\xfe\x7E\x00' : r'~', r'\xff\xfe\x80\x00' : r'€', r'\xff\xfe\xA0\x00' : r' ', r'\xff\xfe\xA1\x00' : r'¡', r'\xff\xfe\xA2\x00' : r'¢', r'\xff\xfe\xA3\x00' : r'£', r'\xff\xfe\xA4\x00' : r'¤', r'\xff\xfe\xA5\x00' : r'¥', r'\xff\xfe\xA6\x00' : r'¦', r'\xff\xfe\xA7\x00' : r'§', r'\xff\xfe\xA8\x00' : r'¨', r'\xff\xfe\xA9\x00' : r'©', r'\xff\xfe\xAA\x00' : r'ª', r'\xff\xfe\xAB\x00' : r'«', r'\xff\xfe\xAC\x00' : r'¬', r'\xff\xfe\xAD\x00' : r'¬', r'\xff\xfe\xAE\x00' : r'®', r'\xff\xfe\xAF\x00' : r'¯', r'\xff\xfe\xB0\x00' : r'°', r'\xff\xfe\xB1\x00' : r'±', r'\xff\xfe\xB2\x00' : r'²', r'\xff\xfe\xB3\x00' : r'³', r'\xff\xfe\xB4\x00' : r'´', r'\xff\xfe\xB5\x00' : r'µ', r'\xff\xfe\xB6\x00' : r'¶', r'\xff\xfe\xB7\x00' : r'•', r'\xff\xfe\xB8\x00' : r'¸', r'\xff\xfe\xB9\x00' : r'¹', r'\xff\xfe\xBA\x00' : r'º', r'\xff\xfe\xBB\x00' : r'»', r'\xff\xfe\xBC\x00' : r'¼', r'\xff\xfe\xBD\x00' : r'½', r'\xff\xfe\xBE\x00' : r'¾', r'\xff\xfe\xBF\x00' : r'¿', r'\xff\xfe\xC0\x00' : r'À', r'\xff\xfe\xC1\x00' : r'Á', r'\xff\xfe\xC2\x00' : r'Â', r'\xff\xfe\xC3\x00' : r'Ã', r'\xff\xfe\xC4\x00' : r'Ä', r'\xff\xfe\xC5\x00' : r'Å', r'\xff\xfe\xC6\x00' : r'Æ', r'\xff\xfe\xC7\x00' : r'Ç', r'\xff\xfe\xC8\x00' : r'È', r'\xff\xfe\xC9\x00' : r'É', r'\xff\xfe\xCA\x00' : r'Ê', r'\xff\xfe\xCB\x00' : r'Ë', r'\xff\xfe\xCC\x00' : r'Ì', r'\xff\xfe\xCD\x00' : r'Í', r'\xff\xfe\xCE\x00' : r'Î', r'\xff\xfe\xCF\x00' : r'Ï', r'\xff\xfe\xD0\x00' : r'Ð', r'\xff\xfe\xD1\x00' : r'Ñ', r'\xff\xfe\xD2\x00' : r'Ò', r'\xff\xfe\xD3\x00' : r'Ó', r'\xff\xfe\xD4\x00' : r'Ô', r'\xff\xfe\xD5\x00' : r'Õ', r'\xff\xfe\xD6\x00' : r'Ö', r'\xff\xfe\xD7\x00' : r'×', r'\xff\xfe\xD8\x00' : r'Ø', r'\xff\xfe\xD9\x00' : r'Ù', r'\xff\xfe\xDA\x00' : r'Ú', r'\xff\xfe\xDB\x00' : r'Û', r'\xff\xfe\xDC\x00' : r'Ü', r'\xff\xfe\xDD\x00' : r'Ý', r'\xff\xfe\xDE\x00' : r'Þ', r'\xff\xfe\xDF\x00' : r'ß', r'\xff\xfe\xE0\x00' : r'à', r'\xff\xfe\xE1\x00' : r'á', r'\xff\xfe\xE2\x00' : r'â', r'\xff\xfe\xE3\x00' : r'ã', r'\xff\xfe\xE4\x00' : r'ä', r'\xff\xfe\xE5\x00' : r'å', r'\xff\xfe\xE6\x00' : r'æ', r'\xff\xfe\xE7\x00' : r'ç', r'\xff\xfe\xE8\x00' : r'è', r'\xff\xfe\xE9\x00' : r'é', r'\xff\xfe\xEA\x00' : r'ê', r'\xff\xfe\xEB\x00' : r'ë', r'\xff\xfe\xEC\x00' : r'ì', r'\xff\xfe\xED\x00' : r'í', r'\xff\xfe\xEE\x00' : r'î', r'\xff\xfe\xEF\x00' : r'ï', r'\xff\xfe\xF0\x00' : r'ð', r'\xff\xfe\xF1\x00' : r'ñ', r'\xff\xfe\xF2\x00' : r'ò', r'\xff\xfe\xF3\x00' : r'ó', r'\xff\xfe\xF4\x00' : r'ô', r'\xff\xfe\xF5\x00' : r'õ', r'\xff\xfe\xF6\x00' : r'ö', r'\xff\xfe\xF7\x00' : r'÷', r'\xff\xfe\xF8\x00' : r'ø', r'\xff\xfe\xF9\x00' : r'ù', r'\xff\xfe\xFA\x00' : r'ú', r'\xff\xfe\xFB\x00' : r'û', r'\xff\xfe\xFC\x00' : r'ü', r'\xff\xfe\xFD\x00' : r'ý', r'\xff\xfe\xFE\x00' : r'þ', r'\xff\xfe\xFF\x00' : r'ÿ' }

    def decoded(self):
        answer = self.mystring
        for i in self.mystring:
            for i, j in self.utf16.iteritems():
                answer = answer.replace(i, j)
        return answer

    def encoded(self):
        answer = ''
        for i in self.mystring:
            for k in self.utf16:
                if i in self.utf16[k]:
                    answer += k
                    break
            else:
                answer += i
        return answer
