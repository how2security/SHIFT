Ingressando Máquinas Linux no Active Directory
==============================================

Pré-Requisitos
--------------

Precisamos de 3 Aplicações para ingressar máquinas Linux no AD, são eles:
	.	Kerberos -> Protocolo usado para autenticação de usuários e serviços de rede, utilizando um sistema de complexo de criptografia utilizando tickets. Para isso, os clientes do domínio deverão ter as informações do KDC (Key Distribution Center - Centro de Distribuição de Chaves) para autenticar-se no AD.
	
	.	Winbind -> É um daemon usado pelo PAM, NSSWITCH, SAMBA e pode ser usado por outros serviços de rede/sistema, fazendo a interface entre o PDC o computador cliente rodando o serviço winbindd, permitindo que máquinas com sistemas Linux comuniquem-se com DC.
	
	.	Samba -> Será utilizado para autenticar usuários no servidor DC, pois o Winbind utiliza o Samba para fazer a comunicação com o DC, além de fornecer os serviços de NMB e SMB para compartilhar arquivos.

O serviço NMB tem a principal finalidade de resolução de nomes NetBIOS para que o servidor Samba possa enxergar e ser enxergado pelas outras máquinas. Então, este serviço permite a navegação pela rede, usando os hostnames das máquinas e o acesso em rede. 

O serviço SMB permite compartilhar tais recursos e autenticar os usuários no servidor Samba local, ou repassar as solicitações de autenticação para outro computador, como um servidor controlador de domínio com o Active Directory.


Considerações de ambiente de rede
---------------------------------

No ambiente proposto no artigo, já existem os servidores DNS em execução na rede, pois, para a autenticação ser feita, é necessário o uso do DNS e o servidor com Active Directory configurado como controlador de domínio principal já instalado e funcionando. 

Veja a disposição dos servidores na rede para explicação do artigo: 

•	Domínio -> how2security.com.br 
•	Servidor DNS primário -> 192.168.5.100
•	Servidor DNS Secundário -> 192.168.5.10 
•	Servidor DHCP -> 192.168.5.100
•	Servidor controlador de domínio -> 192.168.5.100 win12-ad.how2security.com.br 

Servidor Linux:
 
•	Servidor cliente → srv-lin-web

Configurando o Servidor Linux
-----------------------------

Nesta parte iremos editar o arquivo /etc/hosts incluindo uma alias para o endereço do controlador de domínio e alterar o hostname do servidor cliente (srv-lin-web), acrescentando o FQDN, ou seja, o nome do domínio junto ao hostname da máquina cliente. 

No entanto, substitua os nomes abaixo pelos correspondentes na sua rede. 

# vi /etc/hosts 

Conteúdo a ser acrescentado: 
127.0.0.1       srv-lin-web.how2security.com.br		localhost	srv-lin-web
192.168.5.15	srv-lin-web.how2security.com.br		srv-lin-web
192.168.5.100   win12-ad.how2security.com.br		win12-ad
192.168.5.10	win2008-adbkp.how2security.com.br	win2008-adbkp

Observe que "win12-ad" e "win2008-adbkp" são os nomes dos controladores de domínio usado no artigo, troque pelos nomes dos controladores de domínio de sua rede. Execute o comando abaixo para ver o nome da máquina completo, ou seja, o hostname com o nome do domínio da máquina cliente: 

# hostname -f 

Instalação de pacotes necessários
---------------------------------

Para que o servidor Linux possa ingressar no domínio, é necessário fazer a instalação dos seguintes pacotes descritos a seguir, lembrando que os pacotes abaixo, são para distros Debian like: 

# apt-get install krb5-user krb5-config winbind samba samba-common smbclient cifs-utils libpam-krb5 libpam-winbind libnss-winbind 

Nos distros rad hat like devemos instalar os seguintes pacotes:

# yum -y install authconfig krb5-workstation pam_krb5 samba-common oddjob-mkhomedir

E em seguida executar o authconfig da seguinte forma:

# authconfig --disablecache --enablewinbind --enablewinbindauth --smbsecurity=ads --smbworkgroup=HOW2SECURITY --smbrealm=HOW2SECURITY --enablewinbindusedefaultdomain --winbindtemplatehomedir=/home/HOW2SECURITY/%U --winbindtemplateshell=/bin/bash --enablekrb5 --krb5realm=HOW2SECURITY.COM.BR --enablekrb5kdcdns --enablekrb5realmdns --enablelocauthorize --enablemkhomedir --enablepamaccess --updateall

Observação: Durante a instalação do kerberos, pode ser apresentado algumas telas com perguntas referentes ao KDC, mas pode dá um ENTER e seguir com a instalação dos pacotes, pois a configuração do kerberos será abordada mais a frente. Além disso, faça o replace do Short Domain onde tiver HOW2SECURITY e do FQDN on tiver HOW2SECURITY.COM.BR.

Serviço NTP
-----------

Para que a máquina cliente possa comunicar-se sem problemas com os controladores de domínio Windows Server, é necessário que o horário e data de ambas as máquinas estejam sincronizadas. Para isso, necessitamos configurar o cliente NTP para atualizar data e hora pelo servidor Active Directory. 

Edite o arquivo de configuração do serviço NTP usando o VI: 

# vi /etc/ntp.conf 

Nas linhas do arquivo onde o conteúdo começa com a palavra "server", comente estas linhas com uma tralha "#", e adicione o seguinte conteúdo: 
# Controlador de domínio #
server 192.168.5.100
restrict 192.168.5.100 

Veja que ambos os endereços são do controlador de domínio. Agora, reinicie o serviço de data e hora: 

# /etc/init.d/ntp stop
# /etc/init.d/ntp start 

Edite o arquivo /etc/resolv.conf indicando os endereços dos servidores de nome, como mostrado abaixo: 

# vi /etc/resolv.conf 
search how2security.com.br
nameserver 192.168.5.100
nameserver 192.168.5.10

Substitua os endereços acima e o nome do domínio informado pelos endereços de seus servidores DNS e o nome do seu domínio na rede onde está configurando a máquina cliente.

Configurando o Kerberos
-----------------------

Para um usuário autenticar-se no Active Directory, é necessário editar o arquivo /etc/krb5.conf e incluir informações sobre o servidor KDC (controlador de domínio kerberos). Nesse caso, o controlador de domínio com o Active Directory possui um KDC. Use o VI para editar o arquivo e inclua as seguintes linhas no arquivo: 

# vi /etc/krb5.conf 

Conteúdo acrescentado: 
[libdefaults]
	default_realm = HOW2SECURITY.COM.BR
	
[realms]
   HOW2SECURITY.COM.BR  =  {
      kdc = win12-ad.how2security.com.br
	  kdc = win2008-bkpad.how2security.com.br
      default_domain  =  HOW2SECURITY.COM.BR
      admin_server  =  win12-ad.how2security.com.br
   } 

[domain_realm]
	.how2security.com.br = HOW2SECURITY.COM.BR 

[logging]
	default = FILE:/var/log/krb5libs.log
	kdc = FILE:/var/log/krb5

	
Este arquivo é organizado em seções. As seções inclusas para autenticação no domínio são listadas abaixo junto com suas sub-seções: 

•	[libdefaults] -> Seção que contém valores padrão para o Kerberos V5, nessa seção só deixei uma única sub-seção, explicada a seguir.

•	default_realm -> Esta sub-seção identifica o domínio padrão a ser usado pelo cliente kerberos. 

•	[realms] -> O kerberos divide a rede em domínios seguros, chamados de "realms", então esta seção contém sub-seções informando nomes de "realms" do Kerberos, informando onde encontrar os servidores Kerberos para domínios seguros específicos e outras informações. 

•	[logging] -> Configuramos o log do serviços Kerberos.


Neste caso, criei uma sub-seção chamada de "HOW2SECURITY.COM.BR", que é referente ao domínio seguro no qual a máquina irá ingressar. E dentro, criei as seguintes sub-seções:

o	kdc -> Aqui se configura o nome da máquina que está executando o controlador de domínio do kerberos mestre, como o controlador de domínio rodando o Active Directory está executando o KDC, então inclui o nome completo da máquina aqui.

o	default_domain -> Nesta sub-seção se especifica o domínio seguro padrão. 

o	admin_server -> Esta sub-seção identifica o host onde o servidor que faz administração do kerberos está sendo executado. 

•	[domain_realm] -> Seção que indica os mapas de domínios e sub-domínios. 

Depois de configurar o kerberos, vamos testar a comunicação entre o AD e o servidor Linux. Execute o comando abaixo, no exemplo estou usando o nome "well", que é um usuário do domínio criado, mas substitua pelo nome do usuário que estiver cadastrado no servidor. 

# kinit well 

Se o comando não retornar nenhuma saída, é porque a comunicação está sendo realizada com sucesso. Agora vamos listar o ticket obtido nessa comunicação usando o comando: 

# klist 

O comando klist deverá retornar uma saída como a que está abaixo: 

Ticket cache: FILE:/tmp/krb5cc_1000
Default principal: well@HOW2SECURITY.COM.BR

Valid       starting    Expires                 Service  principal
13-11-2012  15:48:35    14-11-2012  01:49:08    krbtgt/HOW2SECURITY.COM.BR@HOW2SECURITY.COM.BR
renew  until  16-11-2012  15:48:35


Configurando o Samba
--------------------

Antes de colocar a máquina no domínio, é necessário configurar o Samba para que seja possível à máquina ingressar no domínio. Toda configuração é feita no /etc/samba/smb.conf, o Winbind não precisa configurar pois o mesmo é um daemon usado pelo Samba. 

Edite o arquivo /etc/samba/smb.conf com VI: 

# vi /etc/samba/smb.conf 

Inclua as seguintes linhas no arquivo "smb.conf", caso algumas dessas linhas já estejam dentro do arquivo, edite e deixa-as como está abaixo. O arquivo está bem comentado com explicações dos principais parâmetros: 

#======================= Global Settings =======================
[global]
   realm= HOW2SECURITY.COM.BR		# Informa o domínio que controlador de domínio Kerberos que será usado
   workgroup = HOW2SECURITY			# Informa o grupo de trabalho, nesse caso informa o domínio
   idmap uid = 10000-15000			# Especifica o intervalo de IDs de usuários que serão mapeados para o sistema local, coloquei um intervalo de cinco mil, mas pode colocar menor ou maior número
   idmap gid = 10000-15000			# Especifica o intervalo de GIDs de grupos que serão mapeados para o sistema local
   restrict anonymous = 2

   #======================= Log do Samba ==========================.
   
   log file = /var/log/samba/samba.log
   os level = 2
   preferred master = no
   max log size = 50
   debug level = 1
   
   #=========== Otimização para melhora de desempenho =============.
   
   read raw = yes 				# Permite leitura de arquivos grandes
   write raw = yes 				# Permite Gravação de arquivos grandes
   oplocks = yes 				# Armazena cache de arquivos no local de acesso.
   max xmit = 65535 			# Configura maior bloco de dados que o samba ira tentar gravar de vez.
   getwd cache = yes 			# armazena em cache a caminho para o diretório corrente
   # dead time = 15 			# Default is 0
   # A opção socket options: TCP_NODELAY faz com que o servidor envie pacotes para a rede, mantendo
   # assim o tempo de resposta do servidor baixo. SO_RCVBUF=8192 e SO_SNDBUF=8192: oferece o reinicio
   # para um valor de buffer mais alto que o do sistema operacional.
   #socket options = SO_KEEPALIVE TCP_NODELAY SO_RCVBUF=8192 SO_SNDBUF=8192
   socket options = SO_KEEPALIVE TCP_NODELAY
   
   #======================= Autenticação ==========================.
   
   security = ads 					# O modo de operação ADS faz com que o Samba se comporte como um membro (cliente) de um domínio Windows
   encrypt passwords = Yes
   allow trusted domains = yes
   
   #=================== Configuração WINBIND ======================.
   winbind enum users = yes			# Permiti o winbind enumerar usuários
   winbind enum groups = yes		# Permiti o winbind enumerar grupos
   winbind enum users = yes
   winbind enum groups = yes
   winbind use default domain = yes	# Parâmetro usado para não incluir o nome do domínio a ser usado junto ao nome do usuário no sistema, por exemplo: DOMINIO\usuário. Habilitando esse parâmetro, somente o nome do usuário será usado para identificar o mesmo
   winbind refresh tickets = yes 	# Este parâmetro é usado para controlar se o winbind deve atualizar os tickets do Kerberos usando o módulo pam_winbind 
   template homedir = /home/%D/%U	# Informa aonde será criado o diretório home de cada usuário após logar no sistema, o parâmetro %D informa o nome do domínio e %U o nome do usuário
   template shell = /bin/bash		# Informa qual shell será atribuído ao usuário, você pode incluir /bin/false para impedir que o usuário faça uso do shell, mas irá ser usado por todos usuários do domínio
   client use spnego = yes			# Este parâmetro controla se smbclient irá usar negociação simples e protegido na autenticação, essa opção permite usar o Kerberos
   domain master = no
   
   
   Observe que nem todos os parâmetros são necessários para ingressar a máquina no domínio. Depois de editar, salve as alterações e reinicie os serviços do Samba e Winbind. 

# /etc/init.d/winbind restart
# /etc/init.d/samba restart 

para confirmar se as opções no arquivo de configuração estão corretas basta executar o seguinte comando

# testparm -v

Ingressando a máquina no domínio
--------------------------------

Depois de configurar o Samba, é hora de ingressar a máquina no domínio com o comando net. Execute o comando abaixo como root: 

# net ads join -U Administrator 

Veja que usei a opção "-U" no comando net, seguido do nome do usuário com permissão de ingressar máquinas no domínio, o usuário Administrator foi usado. Após a execução do comando, deverá retornar uma mensagem como que está abaixo: 

Using short domain name - HOW2SECURITY
Joined 'SRV-LIN-WEB' to realm 'HOW2SECURITY.COM.BR' 

Caso de um erro de nome muito longo (limite NetBIOS é de 15 Bytes para o nome): 

Our netbios name can be at most 15 chars long, "SERVER-BIG-NAME-IN-DOMAIN" is 25 chars long
Invalid configuration. Exiting....
Failed to join domain: The format of the specified computer name is invalid.

Neste caso devemos acrescentar um nome NetBIOS na configuração do SAMBA da seguinte forma:

# vi /etc/samba/smb.conf

   netbios name = SRV-BNID01


Reinicie novamente o serviço Winbind

# /etc/init.d/winbind restart

Agora, faça o teste e liste os grupos e usuários do domínio com o comando wbinfo. Para listar usuários execute: 

# # net ads testjoin

# wbinfo -u 

# getent passwd

Para listar os grupos execute: 

# wbinfo -g 

# getent group

# wbinfo -t

Caso não retorne nenhum nome de usuário ou grupo, reinicie o Winbind.

Caso deseje retirar a máquina do domínio basata utilizar o seguinte comando:

# net ads leave -U Administrator


Configurando o nsswitch.conf
----------------------------

Depois ingressar a máquina no domínio, vamos configurar o arquivo /etc/nsswitch.conf para que o sistema possa saber onde buscar informações de login dos usuários que estão se autenticando. É neste arquivo que iremos comunicar ao sistema que ele deve procurar nossas informações de login usando o Winbind. 

Edite o arquivo usando o VI e deixando as linhas abaixo como demonstrado. Em seguida, salve as alterações: 

# vi /etc/nsswitch.conf 

Conteúdo alterado: 
passwd: compat winbind
group: compat winbind


Concluindo o trabalho
---------------------

Muitos howtos encontrados na Internet mostram configurações adicionais desnecessárias, fazendo alterações em vários arquivos de autenticação do PAM. Mas a maioria destas configurações não são necessárias, pois ao instalar os pacotes Winbind e o pacote que contém as bibliotecas do kerberos, o próprio sistema se encarrega de alterar os arquivos sem qualquer intervenção dos usuários, com exceção de um arquivo. 

O único arquivo que se faz necessário a intervenção do usuário é o /etc/pam.d/common-session (em distros Debian like). 

Então, edite o arquivo /etc/pam.d/common-session e após linha abaixo: 
session required pam_unix.so 

Inclua esta: 
session required pam_mkhomedir.so umask=0022 skel=/etc/skel 

A linha mencionada anteriormente faz o diretório home de cada usuário ser criado automaticamente no inicio de cada sessão após a autenticação do usuário, setando as permissões para os arquivos e diretórios com a "umask 0022" e obtendo do diretório /etc/skel seus sub-diretórios e arquivos padrões. 

No caso do Red Hat like podemos ter a mensagem de erro: winbind pam_unix(sshd:auth): authentication failure

Para resolver esse problema podemos editar os seguintes arquivos do PAM:

# vi /etc/pam.d/system-auth
# vi /etc/pam.d/password-auth

Comente a linha:

#auth        sufficient    pam_krb5.so use_first_pass

Account lockout issues

I ran into a very frustrating problem where everything works dandy if you get the password correct on the first try, but if you mess up even once it results in your Active Directory account being locked. You were locked out after the first try. Each login, even when successful, had this in the logs:

winbind pam_unix(sshd:auth): authentication failure
This problem took a few days to solve. Ultimately it involved modifying two files:

vi /etc/pam.d/system-auth
vi /etc/pam.d/password-auth
As far as I can tell, the problem was a combination of pam_unix being first (which always failed when using AD login), as well as having both winbind and kerberos enabled. The fix was to change the order of each mention of pam_unix to be below any mention of pam_winbind. The other fix I had to do was to comment out mentions of pam_krb5 completely.

#auth        sufficient    pam_krb5.so use_first_pass
Restrict logins
The current configuration allows any domain account to log into the machine. You will probably want to restrict who can log in to the machine to certain security groups. The problem: many Active Directory security groups contain spaces in their name, which Linux doesn’t like.

How do you add a security group that contains a space? Escape characters don’t seem to work in the pam config files.  I found out thanks to this site that it is easier to just not use spaces at all. Get the SID of the group instead.

Use wbcinfo -n to query the group in question, using the backslash to escape the space. It will return the SID we desire.

wbinfo -n Domain\ Users
S-1-5-21-464601995-1902203606-794563710-513 Domain Group (2)
Next, modify /etc/pam.d/password-auth and add the require_membership_of argument to pam_winbind.so:

auth        sufficient    pam_winbind.so require_membership_of=S-1-5-21-464601995-1902203606-794563710-513



Referencias:

https://techblog.jeppson.org/2015/03/join-a-centos-machine-to-an-ad-domain/
https://rafaelit.wordpress.com/2017/02/01/colocando-linux-no-dominio/
That’s it! Logins are now restricted to the security group listed.

Configure sudo access
Sudo uses a different list for authorization, which amusingly, handles escaped spaces just fine.  Simply add the active directory group in sudo as you a local one, eg using a % and then group name, escaping spaces with a backslash:

%Domain\ Users ALL=(ALL) ALL

